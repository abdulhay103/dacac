// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model users {
  id         BigInt   @id @default(autoincrement()) @db.UnsignedBigInt
  firstName  String   @db.VarChar(25)
  lastName   String   @db.VarChar(25)
  profession String   @db.VarChar(50)
  bio        String   @db.VarChar(1000)
  avater     String   @db.VarChar(300)
  email      String   @unique @db.VarChar(50)
  phone      String   @db.VarChar(20)
  address    String   @db.VarChar(500)
  password   String   @db.VarChar(500)
  otp        String   @db.VarChar(10)
  type       String   @db.VarChar(10)
  createdAt  DateTime @default(now()) @db.Timestamp(0)
  updatedAt  DateTime @default(now()) @updatedAt @db.Timestamp(0)

  // Relations
  products products[]
  orders   orders[]
}

model categories {
  id        BigInt     @id @default(autoincrement()) @db.UnsignedBigInt
  name      String     @unique @db.VarChar(30)
  desc      String     @db.VarChar(1000)
  createdAt DateTime   @default(now()) @db.Timestamp(0)
  updatedAt DateTime   @default(now()) @updatedAt @db.Timestamp(0)
  products  products[]
}

model products {
  id             BigInt   @id @default(autoincrement()) @db.UnsignedBigInt
  title          String   @unique @db.VarChar(100)
  short_desc     String   @db.VarChar(150)
  details        String   @db.VarChar(50000)
  img1           String   @db.VarChar(255)
  img2           String   @db.VarChar(255)
  img3           String   @db.VarChar(255)
  origin         String   @db.VarChar(10)
  price          String   @db.VarChar(10)
  discount       String   @db.VarChar(10)
  status         String   @db.VarChar(100)
  type           String   @db.VarChar(100)
  support_n_care String   @db.VarChar(500)
  how_to_setup   String   @db.VarChar(500)
  faq            String   @db.VarChar(500)
  userId         BigInt   @db.UnsignedBigInt
  categoryId     BigInt   @db.UnsignedBigInt
  createdAt      DateTime @default(now()) @db.Timestamp(0)
  updatedAt      DateTime @default(now()) @db.Timestamp(0)

  //Relations
  user     users      @relation(fields: [userId], references: [id], onDelete: Restrict, onUpdate: Cascade)
  category categories @relation(fields: [categoryId], references: [id], onDelete: Restrict, onUpdate: Cascade)
  orders   orders[]
}

model orders {
  id        BigInt   @id @default(autoincrement()) @db.UnsignedBigInt
  userId    BigInt   @db.UnsignedBigInt
  productId BigInt   @db.UnsignedBigInt
  qtr       BigInt   @db.UnsignedBigInt
  status    String   @db.VarChar(50)
  createdAt DateTime @default(now()) @db.Timestamp(0)
  updatedAt DateTime @default(now()) @db.Timestamp(0)
  //Relations
  user      users    @relation(fields: [userId], references: [id], onDelete: Restrict, onUpdate: Cascade)
  product   products @relation(fields: [productId], references: [id], onDelete: Restrict, onUpdate: Cascade)
}

model massages {
  id        BigInt   @id @default(autoincrement()) @db.UnsignedBigInt
  name      String   @db.VarChar(50)
  email     String   @db.VarChar(50)
  massage   String   @db.VarChar(1000)
  status    String   @db.VarChar(15)
  createdAt DateTime @default(now()) @db.Timestamp(0)
  updatedAt DateTime @default(now()) @updatedAt @db.Timestamp(0)
}

model subscribers {
  id        BigInt   @id @default(autoincrement()) @db.UnsignedBigInt
  email     String   @unique @db.VarChar(50)
  createdAt DateTime @default(now()) @db.Timestamp(0)
  updatedAt DateTime @default(now()) @updatedAt @db.Timestamp(0)
}
