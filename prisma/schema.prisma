// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model users {
  id         BigInt       @id @default(autoincrement()) @db.UnsignedBigInt
  firstName  String       @db.VarChar(50)
  lastName   String       @db.VarChar(50)
  profession String       @db.VarChar(50)
  bio        String       @db.Text
  avatar     String       @db.VarChar(300)
  email      String       @unique @db.VarChar(100)
  phone      String       @db.VarChar(20)
  address    String       @db.Text
  password   String       @db.VarChar(500)
  otp        String       @db.VarChar(10)
  type       String       @db.VarChar(20)
  createdAt  DateTime     @default(now()) @db.DateTime
  updatedAt  DateTime     @default(now()) @updatedAt @db.DateTime
  categories categories[]
  blogs      blogs[]
}

model teams {
  id            BigInt   @id @default(autoincrement()) @db.UnsignedBigInt
  firstName     String   @db.VarChar(25)
  lastName      String   @db.VarChar(25)
  profession    String   @db.VarChar(50)
  bio           String   @db.Text
  avatar        String   @db.VarChar(300)
  email         String   @unique @db.VarChar(50)
  phone         String   @db.VarChar(20)
  qualification String   @db.VarChar(150)
  designation   String   @db.VarChar(50)
  createdAt     DateTime @default(now()) @db.Timestamp(0)
  updatedAt     DateTime @default(now()) @updatedAt @db.Timestamp(0)
}

model notices {
  id        BigInt   @id @default(autoincrement()) @db.UnsignedBigInt
  title     String   @db.VarChar(500)
  details   String   @db.Text
  status    String   @db.VarChar(15)
  createdAt DateTime @default(now()) @db.Timestamp(0)
  updatedAt DateTime @default(now()) @updatedAt @db.Timestamp(0)
}

model massages {
  id        BigInt   @id @default(autoincrement()) @db.UnsignedBigInt
  name      String   @db.VarChar(50)
  email     String   @db.VarChar(50)
  massage   String   @db.VarChar(1000)
  status    String   @db.VarChar(15)
  createdAt DateTime @default(now()) @db.Timestamp(0)
  updatedAt DateTime @default(now()) @updatedAt @db.Timestamp(0)
}

model subscribers {
  id        BigInt   @id @default(autoincrement()) @db.UnsignedBigInt
  email     String   @unique @db.VarChar(50)
  createdAt DateTime @default(now()) @db.Timestamp(0)
  updatedAt DateTime @default(now()) @updatedAt @db.Timestamp(0)
}

model services {
  id           BigInt   @id @default(autoincrement()) @db.UnsignedBigInt
  title        String   @unique @db.VarChar(100)
  subTitle     String   @db.VarChar(200)
  shortDetails String   @db.MediumText
  img          String   @db.TinyText
  details      String   @db.Text
  createdAt    DateTime @default(now()) @db.Timestamp(0)
  updatedAt    DateTime @default(now()) @updatedAt @db.Timestamp(0)
}

model directors {
  id            BigInt   @id @default(autoincrement()) @db.UnsignedBigInt
  name          String   @unique @db.VarChar(100)
  qualification String   @db.TinyText
  profession    String   @db.VarChar(200)
  designation   String   @db.VarChar(200)
  phone         String   @db.VarChar(20)
  email         String   @db.VarChar(100)
  img           String   @db.TinyText
  details       String   @db.Text
  createdAt     DateTime @default(now()) @db.Timestamp(0)
  updatedAt     DateTime @default(now()) @updatedAt @db.Timestamp(0)
}

model categories {
  id        BigInt   @id @default(autoincrement()) @db.UnsignedBigInt
  name      String   @unique @db.VarChar(100)
  details   String   @db.Text
  usersId   BigInt   @db.UnsignedBigInt
  createdAt DateTime @default(now()) @db.DateTime
  updatedAt DateTime @default(now()) @updatedAt @db.DateTime
  users     users    @relation(fields: [usersId], references: [id], onDelete: Restrict, onUpdate: Cascade)
  blogs     blogs[]
}

model blogs {
  id         BigInt     @id @default(autoincrement()) @db.UnsignedBigInt
  title      String     @unique @db.VarChar(200)
  short_desc String     @db.MediumText
  image      String     @db.TinyText
  details    String     @db.Text
  categoryId BigInt     @db.UnsignedBigInt
  usersId    BigInt     @db.UnsignedBigInt
  createdAt  DateTime   @default(now()) @db.DateTime()
  updatedAt  DateTime   @default(now()) @updatedAt @db.DateTime()
  users      users      @relation(fields: [usersId], references: [id], onDelete: Restrict, onUpdate: Cascade)
  categories categories @relation(fields: [categoryId], references: [id], onDelete: Restrict, onUpdate: Cascade)
}
